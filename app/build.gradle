apply plugin: 'com.android.application'
apply plugin: 'play'

buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.github.triplet.gradle:play-publisher:1.0.2'
    }
}

android {
    lintOptions {
        abortOnError false
    }
    signingConfigs {
        release
    }
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.sregg.android.tv.spotify"
        minSdkVersion 17
        targetSdkVersion 21
        renderscriptTargetApi 17
        renderscriptSupportModeEnabled true
        versionCode 9
        versionName "1.7"
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    repositories {
        mavenCentral()
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:recyclerview-v7:21.0.3'
    compile 'com.android.support:leanback-v17:21.0.3'
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'com.squareup.picasso:picasso:2.4.0'
    compile 'com.spotify.sdk:spotify-player:1.0.0-beta10@aar'
    compile 'com.spotify.sdk:spotify-auth:1.0.0-beta10@aar'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.2.0'
    compile project(':spotify-web-api-android')
    compile 'com.android.support:palette-v7:21.0.3'
    compile 'com.squareup:otto:1.3.6'
    compile 'com.joanzapata.android:android-iconify:1.0.9'
    compile 'de.u-mass:lastfm-java:0.1.2'
}

play {
    serviceAccountEmail = '724462887271-bk4vi27q9qk9h4g3mideokj3e0bqe3ng@developer.gserviceaccount.com'
    pk12File = file('/Users/simonreggiani/Documents/dev/keys/Google_Play_Android_Developer-0bc22be971a2.p12')
}

Properties releaseProperties = new Properties()
if (project.rootProject.file('release.properties').exists()) {
    releaseProperties.load(project.rootProject.file('release.properties').newDataInputStream())
    if (releaseProperties.getProperty('storeFile') &&
            releaseProperties.getProperty('storePassword') &&
            releaseProperties.getProperty('keyAlias') &&
            releaseProperties.getProperty('keyPassword')) {
        android.signingConfigs.release.storeFile = file(releaseProperties.getProperty('storeFile'))
        android.signingConfigs.release.storePassword = releaseProperties.getProperty('storePassword')
        android.signingConfigs.release.keyAlias = releaseProperties.getProperty('keyAlias')
        android.signingConfigs.release.keyPassword = releaseProperties.getProperty('keyPassword')
    } else {
        project.logger.warn('WARN: Set the values storeFile, storePassword, keyAlias, and keyPassword in release.properties to sign the release.')
        android.buildTypes.release.signingConfig = null
    }
} else {
    project.logger.warn('WARN: Set the values storeFile, storePassword, keyAlias, and keyPassword in release.properties to sign the release.')
    android.buildTypes.release.signingConfig = null
}
